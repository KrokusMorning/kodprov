{"ast":null,"code":"var _jsxFileName = \"/Users/ocean/Code/ocean/Kodprov/kodprov_frontend/src/pages/Persons.js\";\nimport React, { Component } from 'react';\nimport { server } from '../config';\n\nclass Persons extends Component {\n  constructor(props) {\n    super(props); //this.fetchPersons();\n\n    this.state = {\n      personsList: [{\n        id: 2,\n        firstName: \"Cool\",\n        surName: \"Cat\",\n        SSN: 900916 - 1358,\n        country: \"Sweden\",\n        city: \"Stockholm\"\n      }]\n    };\n  }\n\n  fetchPersons() {\n    fetch(server + \"/getPersons\").then(response => {\n      return response.json();\n    }).then(response => {\n      if (response.error && response.status === 403) {} else if (response.error) throw new Error(\"Something went wrong. Please try again.\");else return response;\n    }).then(data => {\n      this.updatePersonsList(data);\n    }).catch(e => {\n      alert(e.message);\n    });\n  }\n\n  updatePersonsList(data) {\n    this.setState({\n      personsList: data\n    });\n  }\n\n  showPersonsList() {\n    if (this.state.personsList && this.state.personsList.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.personsList.map((person, index) => React.createElement(\"div\", {\n        id: \"listDiv\",\n        key: \"l\" + person.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"listFirst\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"First name: \" + person.firstName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"listSur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Surname: \" + person.surName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"listSsn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"SSN: \" + person.ssn), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"listCountry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Country: \" + person.country), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"listCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"City: \" + person.city), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        id: \"listView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"no results\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.showPersonsList());\n  }\n\n}\n\nexport default Persons;","map":{"version":3,"sources":["/Users/ocean/Code/ocean/Kodprov/kodprov_frontend/src/pages/Persons.js"],"names":["React","Component","server","Persons","constructor","props","state","personsList","id","firstName","surName","SSN","country","city","fetchPersons","fetch","then","response","json","error","status","Error","data","updatePersonsList","catch","e","alert","message","setState","showPersonsList","length","map","person","index","ssn","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,WAArB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAA+B;AAc3BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AAFe,SAZnBC,KAYmB,GAZX;AACJC,MAAAA,WAAW,EAAE,CAAC;AACVC,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,SAAS,EAAE,MAFD;AAGVC,QAAAA,OAAO,EAAE,KAHC;AAIVC,QAAAA,GAAG,EAAE,SAAO,IAJF;AAKVC,QAAAA,OAAO,EAAE,QALC;AAMVC,QAAAA,IAAI,EAAE;AANI,OAAD;AADT,KAYW;AAGlB;;AAEDC,EAAAA,YAAY,GAAE;AACVC,IAAAA,KAAK,CAACb,MAAM,GAAG,aAAV,CAAL,CACKc,IADL,CACWC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAIKF,IAJL,CAIWC,QAAD,IACN;AACI,UAAKA,QAAQ,CAACE,KAAV,IAAoBF,QAAQ,CAACG,MAAT,KAAoB,GAA5C,EAAiD,CAEhD,CAFD,MAGK,IAAIH,QAAQ,CAACE,KAAb,EAAoB,MAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN,CAApB,KACA,OAAOJ,QAAP;AACR,KAXL,EAYKD,IAZL,CAYUM,IAAI,IAAG;AACT,WAAKC,iBAAL,CAAuBD,IAAvB;AAA8B,KAbtC,EAcKE,KAdL,CAcWC,CAAC,IAAI;AACRC,MAAAA,KAAK,CAACD,CAAC,CAACE,OAAH,CAAL;AACH,KAhBL;AAiBH;;AAEDJ,EAAAA,iBAAiB,CAACD,IAAD,EAAM;AACnB,SAAKM,QAAL,CAAc;AAACrB,MAAAA,WAAW,EAAEe;AAAd,KAAd;AACH;;AAEDO,EAAAA,eAAe,GAAG;AACd,QAAG,KAAKvB,KAAL,CAAWC,WAAX,IAA0B,KAAKD,KAAL,CAAWC,WAAX,CAAuBuB,MAAvB,GAAgC,CAA7D,EAA+D;AAC3D,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,KAAKxB,KAAL,CAAWC,WAAX,CAAuBwB,GAAvB,CAA2B,CAACC,MAAD,EAASC,KAAT,KACzB;AAAK,QAAA,EAAE,EAAE,SAAT;AAAoB,QAAA,GAAG,EAAE,MAAMD,MAAM,CAACxB,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,EAAE,EAAE,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,iBAAiBwB,MAAM,CAACvB,SAA7C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAG,QAAA,EAAE,EAAE,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB,cAAcuB,MAAM,CAACtB,OAAxC,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAG,QAAA,EAAE,EAAE,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB,UAAUsB,MAAM,CAACE,GAApC,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI;AAAG,QAAA,EAAE,EAAE,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuB,cAAcF,MAAM,CAACpB,OAA5C,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EASI;AAAG,QAAA,EAAE,EAAE,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB,WAAWoB,MAAM,CAACnB,IAAtC,CATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADF,CADC,CAAP;AAgBH,KAjBD,MAkBI;AACA,aAAO;AAAK,QAAA,EAAE,EAAE,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;AACJ;;AAGDsB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,eAAL,EADL,CADJ;AAKH;;AA1E0B;;AA8E/B,eAAe1B,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport {server} from '../config';\n\nclass Persons extends Component{\n\n    state = {\n        personsList: [{\n            id: 2,\n            firstName: \"Cool\",\n            surName: \"Cat\",\n            SSN: 900916-1358,\n            country: \"Sweden\",\n            city: \"Stockholm\",\n        }],\n    }\n\n\n    constructor(props) {\n        super(props);\n        //this.fetchPersons();\n    }\n\n    fetchPersons(){\n        fetch(server + \"/getPersons\")\n            .then((response) => {\n                return response.json();\n            })\n            .then((response) =>\n            {\n                if ((response.error) && response.status === 403) {\n\n                }\n                else if (response.error) throw new Error(\"Something went wrong. Please try again.\");\n                else return response;\n            })\n            .then(data =>{\n                this.updatePersonsList(data);})\n            .catch(e => {\n                alert(e.message);\n            })\n    }\n\n    updatePersonsList(data){\n        this.setState({personsList: data})\n    }\n\n    showPersonsList() {\n        if(this.state.personsList && this.state.personsList.length > 0){\n            return <div>\n                { this.state.personsList.map((person, index) =>\n                    <div id={\"listDiv\"} key={\"l\" + person.id}>\n                        <p id={\"listFirst\"}>{\"First name: \" + person.firstName}</p>\n                        <br/>\n                        <p id={\"listSur\"}>{\"Surname: \" + person.surName}</p>\n                        <br/>\n                        <p id={\"listSsn\"}>{\"SSN: \" + person.ssn}</p>\n                        <br/>\n                        <p id={\"listCountry\"}>{\"Country: \" + person.country}</p>\n                        <br/>\n                        <p id={\"listCity\"}>{\"City: \" + person.city}</p>\n                        <br/>\n                    </div>)\n                }\n            </div>;\n        }\n        else{\n            return <div id={\"listView\"}>no results</div>\n        }\n    }\n\n\n    render(){\n        return(\n            <div>\n                {this.showPersonsList()}\n            </div>\n        )\n    }\n\n}\n\nexport default Persons;"]},"metadata":{},"sourceType":"module"}